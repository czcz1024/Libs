<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Uninf.Cache</name>
    </assembly>
    <members>
        <member name="T:Uninf.Cache.IMemoryCache">
            <summary>
            IMemoryCache 接口
            </summary>
        </member>
        <member name="M:Uninf.Cache.IMemoryCache.Get(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Uninf.Cache.IMemoryCache.Get``1(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Uninf.Cache.IMemoryCache.Get``1(System.String,System.Func{``0})">
            <summary>
            Gets the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="nullDo">The null do.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Uninf.Cache.IMemoryCache.Get``1(System.String,System.Func{``0},System.DateTime)">
            <summary>
            Gets the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="nullDo">The null do.</param>
            <param name="expire">The expire.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Uninf.Cache.IMemoryCache.Set(System.String,System.Object)">
            <summary>
            Sets the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Uninf.Cache.IMemoryCache.Set(System.String,System.Object,System.DateTime)">
            <summary>
            Sets the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="obj">The object.</param>
            <param name="expire">The expire.</param>
        </member>
        <member name="M:Uninf.Cache.IMemoryCache.Delete(System.String)">
            <summary>
            Deletes the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Uninf.Cache.IMemoryCache.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if [contains] [the specified key]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Uninf.Cache.ICache">
            <summary>
            缓存接口
            </summary>
        </member>
        <member name="M:Uninf.Cache.ICache.Get``2(``1)">
            <summary>
            通过key获取实体，实体必须有命名为id的属性作为唯一标识
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">实体key类型</typeparam>
            <param name="key">实体key值</param>
            <returns>实体</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.Gets``2(``1[])">
            <summary>
            通过key数组批量获取实体，实体必须有命名为id的属性作为唯一标识
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">实体key类型</typeparam>
            <param name="keys">实体keys数组.</param>
            <returns>字典，key为传入的实体key，值为对应的实体</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.Set``1(``0)">
            <summary>
            保存实体到缓存，实体必须有命名为id的属性作为唯一标识
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="item">实体值</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Set``1(``0,System.DateTime)">
            <summary>
            保存实体到缓存，实体必须有命名为id的属性作为唯一标识
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="item">实体值</param>
            <param name="expire">过期时间</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Delete(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存key</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Delete``1(``0)">
            <summary>
            删除实体缓存，实体必须有命名为id的属性作为唯一标识
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="item">实体值</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Delete``2(``1)">
            <summary>
            通过实体key删除缓存
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">实体key类型</typeparam>
            <param name="key">实体key值</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Deletes``2(``1[])">
            <summary>
            批量删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">实体key类型</typeparam>
            <param name="keys">实体key值集合</param>
        </member>
        <member name="M:Uninf.Cache.ICache.ContainsKey(System.String)">
            <summary>
            缓存中是否存在
            </summary>
            <param name="key">缓存key.</param>
            <returns>存在返回<c>true</c>否则返回<c>false</c>.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.SaveToList``1(``0[])">
            <summary>
            批量存入列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
        </member>
        <member name="M:Uninf.Cache.ICache.AddToList``1(``0)">
            <summary>
            添加到列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="item">实体</param>
        </member>
        <member name="M:Uninf.Cache.ICache.DeleteFromList``1(``0)">
            <summary>
            从列表删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="item">实体</param>
        </member>
        <member name="M:Uninf.Cache.ICache.ClearList``1">
            <summary>
            清空列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:Uninf.Cache.ICache.GetAll``1">
            <summary>
            获取列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.ContainsList``1">
            <summary>
            是否存在列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <returns><c>true</c> if this instance contains list; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.ContainsPage``1">
            <summary>
            是否存在翻页列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <returns><c>true</c> if this instance contains page; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.SaveRelated``3(System.String,``2,``1[])">
            <summary>
            批量保存到主从关系列表
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <typeparam name="TMainKey">主实体主键类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
            <param name="items">子实体</param>
        </member>
        <member name="M:Uninf.Cache.ICache.AddToRelated``3(System.String,``2,``1)">
            <summary>
            向主从关系列表中添加
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <typeparam name="TMainKey">主实体主键类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
            <param name="item">子实体</param>
        </member>
        <member name="M:Uninf.Cache.ICache.RemoveFromRelated``3(System.String,``2,System.Object)">
            <summary>
            从主从关系列表中删除
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <typeparam name="TMainKey">主实体主键类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
            <param name="item">子实体</param>
        </member>
        <member name="M:Uninf.Cache.ICache.GetAllRelated``3(System.String,``2)">
            <summary>
            获取全部主从关系中的从列表
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <typeparam name="TMainKey">主实体主键类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
            <returns>IEnumerable&lt;TChild&gt;.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.ClearRelated``3(System.String,``2)">
            <summary>
            清空主从列表
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <typeparam name="TMainKey">主实体主键类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
        </member>
        <member name="M:Uninf.Cache.ICache.ContainsRelated``2(System.String,System.Object)">
            <summary>
            是否存在主从列表
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <param name="name">关系名称</param>
            <param name="pid">主实体主键值</param>
            <returns><c>true</c> if the specified name contains related; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.SaveToPage``1(System.Func{``0,System.Int64},``0[])">
            <summary>
            批量保存到分页
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="score">排序分值计算方法</param>
            <param name="items">实体集合</param>
        </member>
        <member name="M:Uninf.Cache.ICache.SaveToPage``3(System.String,``2,System.Func{``1,System.Int64},``1[])">
            <summary>
            批量保存到关系分页
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
            <param name="score">排序分值计算方法</param>
            <param name="items">实体集合</param>
        </member>
        <member name="M:Uninf.Cache.ICache.RemoveFromPage``1(``0[])">
            <summary>
            从分页中删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="items">实体集合</param>
            <returns>删除条数</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.RemoveFromPage``3(System.String,``2,``1[])">
            <summary>
            从关系分页中删除
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
            <param name="items">实体集合</param>
            <returns>删除条数</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.ClearPage``1">
            <summary>
            清空翻页
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Uninf.Cache.ICache.ClearPage``3(System.String,``2)">
            <summary>
            清空关系翻页
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <typeparam name="TMainKey">主实体主键类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Page``1(System.Int32,System.Int32,System.Int64@,System.Boolean)">
            <summary>
            获取翻页列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="skip">跳过数量</param>
            <param name="take">获取数量</param>
            <param name="allCount">全部数量</param>
            <param name="desc">倒序为<c>true</c></param>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.PageRelated``3(System.String,System.Object,System.Int32,System.Int32,System.Int64@,System.Boolean)">
            <summary>
            获取关系翻页列表
            </summary>
            <typeparam name="TMain">主实体类型</typeparam>
            <typeparam name="TChild">子实体类型</typeparam>
            <typeparam name="TMainKey">主实体主键类型</typeparam>
            <param name="name">关系名称</param>
            <param name="pid">主实体主键值</param>
            <param name="skip">跳过数量</param>
            <param name="take">获取数量</param>
            <param name="allCount">全部数量</param>
            <param name="desc">倒序为<c>true</c></param>
            <returns>IEnumerable&lt;TChild&gt;.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.ContainsRelatedPage``1(System.String,System.Object)">
            <summary>
            是否存在关系翻页
            </summary>
            <typeparam name="TChild">子实体类型</typeparam>
            <param name="name">关系名称</param>
            <param name="key">主实体主键值</param>
            <returns><c>true</c> if [contains related page] [the specified name]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.AddToList(System.String,System.String)">
            <summary>
            添加到列表
            </summary>
            <param name="key">缓存key</param>
            <param name="value">要添加的值</param>
        </member>
        <member name="M:Uninf.Cache.ICache.RemoveFromList(System.String,System.String)">
            <summary>
            从列表删除
            </summary>
            <param name="key">缓存key</param>
            <param name="value">删除的值</param>
        </member>
        <member name="M:Uninf.Cache.ICache.GetAllFromList(System.String)">
            <summary>
            从列表获取
            </summary>
            <param name="key">缓存key</param>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.GetPageFromList(System.String,System.Int32,System.Int32)">
            <summary>
            从翻页获取
            </summary>
            <param name="key">缓存key</param>
            <param name="skip">跳过数量</param>
            <param name="take">获取数量</param>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.SetItemInList(System.String,System.Int32,System.String)">
            <summary>
            Sets the item in list.
            </summary>
            <param name="key">The key.</param>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Uninf.Cache.ICache.GetItemInList(System.String,System.Int32)">
            <summary>
            Gets the item in list.
            </summary>
            <param name="key">The key.</param>
            <param name="index">The index.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.ClearList(System.String)">
            <summary>
            Clears the list.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Uninf.Cache.ICache.ExpireAt(System.String,System.DateTime)">
            <summary>
            设置过期时间
            </summary>
            <param name="key">缓存key</param>
            <param name="datetime">过期时间</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Set``1(System.String,``0)">
            <summary>
            设置缓存
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="key">缓存key</param>
            <param name="value">值</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Set``1(System.String,``0,System.DateTime)">
            <summary>
            设置缓存
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="key">缓存key</param>
            <param name="value">值</param>
            <param name="expire">过期时间</param>
        </member>
        <member name="M:Uninf.Cache.ICache.Increment(System.String,System.UInt32)">
            <summary>
            数量+1
            </summary>
            <param name="key">缓存key</param>
            <param name="value">The value.</param>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.Decrement(System.String,System.UInt32)">
            <summary>
            数量-1
            </summary>
            <param name="key">缓存key</param>
            <param name="value">The value.</param>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.Get(System.String)">
            <summary>
            获取缓存内容
            </summary>
            <param name="key">缓存key.</param>
            <returns>json</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.Get``1(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Uninf.Cache.ICache.GetAll``1(System.String[])">
            <summary>
            Gets all.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keys">The keys.</param>
            <returns>IDictionary&lt;System.String, T&gt;.</returns>
        </member>
    </members>
</doc>
