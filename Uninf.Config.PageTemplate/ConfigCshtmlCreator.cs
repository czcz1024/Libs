// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 12.0.0.0
//  
//     对此文件的更改可能会导致不正确的行为。此外，如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Uninf.Config.PageTemplate
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System.Reflection;
    using System.ComponentModel.DataAnnotations;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class ConfigCshtmlCreator : ConfigCshtmlCreatorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n\r\n");
            this.Write("@model ");
            
            #line 14 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(configType.FullName));
            
            #line default
            #line hidden
            this.Write("\r\n@{    \r\n    var currentSection=ViewBag.Section;\r\n\tViewBag.Title=\"配置管理\";\r\n}\r\n");
            
            #line 19 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

    var configSections = configType.GetProperties();

            
            #line default
            #line hidden
            this.Write(@"@if(ViewBag.Result==true){
<div class=""alert alert-success fade in"">
<button aria-hidden=""true"" data-dismiss=""alert"" class=""close"" type=""button"">×</button>
更新成功
</div>
}
@if(ViewBag.Result==false){
<div class=""alert alert-danger fade in"">
<button aria-hidden=""true"" data-dismiss=""alert"" class=""close"" type=""button"">×</button>
更新失败
</div>
}
<section class=""container clearfix main_section"" style=""position: relative;"">
<div class=""row"">
<div class=""col-sm-12"">
<ul class=""nav nav-tabs"">
");
            
            #line 38 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

    var ii = 0;
    foreach (PropertyInfo section in configSections)
    {
        var displayName = section.GetDisplayName();
        
            
            #line default
            #line hidden
            this.Write("    <li class=\"@((currentSection==\"");
            
            #line 44 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("\" || (");
            
            #line 44 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((ii==0).ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" && string.IsNullOrEmpty(currentSection)))?\"active\":\"\")\">\r\n        <a href=\"#");
            
            #line 45 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("\" data-toggle=\"tab\" class=\"@((currentSection==\"");
            
            #line 45 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("\" || (");
            
            #line 45 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((ii==0).ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" && string.IsNullOrEmpty(currentSection)))?\"active\":\"\")\">");
            
            #line 45 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(displayName));
            
            #line default
            #line hidden
            this.Write("</a>\r\n    </li>\r\n");
            
            #line 47 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

        ii++;
    }

            
            #line default
            #line hidden
            this.Write("</ul>\r\n<div class=\"tab-content\">\r\n");
            
            #line 53 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

    var i = 0;
    foreach (PropertyInfo section in configSections)
    {

            
            #line default
            #line hidden
            this.Write("    \r\n    <div style=\"border:1px solid #ccc\" class=\"tab-pane @((currentSection==\"" +
                    "");
            
            #line 59 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("\" || (");
            
            #line 59 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((i==0).ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" && string.IsNullOrEmpty(currentSection)))?\"active\":\"\")\" id=\"");
            
            #line 59 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("\">\r\n<div class=\"alert alert-info\"><i class=\"icon-reorder\"></i><span class=\"panel-" +
                    "title\">  ");
            
            #line 60 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(" "+section.GetDisplayName()));
            
            #line default
            #line hidden
            this.Write("</span></div>\r\n<form role=\"form\" class=\"form-horizontal\" action=\"");
            
            #line 61 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postAction));
            
            #line default
            #line hidden
            this.Write("\" method=\"post\">\r\n        \r\n            \r\n            <input type=\"hidden\" value=" +
                    "\"");
            
            #line 64 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("\" name=\"section\" />\r\n");
            
            #line 65 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

            var propertys = section.PropertyType.GetProperties().Where(x=>x.GetCustomAttributes(true).All(y => y.GetType().Name != "XmlIgnoreAttribute"));
            foreach (PropertyInfo property in propertys)
            {
                var pname = property.GetDisplayName();
                

            
            #line default
            #line hidden
            this.Write("                <div class=\"form-group\">\r\n                    <label class=\"col-s" +
                    "m-2 control-label\" for=\"");
            
            #line 73 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 73 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 73 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pname));
            
            #line default
            #line hidden
            this.Write("</label>\r\n                    <div class=\"col-sm-4\">\r\n");
            
            #line 75 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                    if (property.PropertyType.IsSimpleType())
                    {//简单类型
                        if (property.PropertyType == typeof(bool))
                        {
                    
            
            #line default
            #line hidden
            this.Write("                        <div class=\"make-switch\" data-on-label=\"<i class=\'glyphic" +
                    "on glyphicon-ok\'></i>\" data-off-label=\"<i class=\'glyphicon glyphicon-remove\'></i" +
                    ">\">\r\n                            @Html.CheckBoxFor(x=>x.");
            
            #line 82 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 82 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")\r\n                        </div>\r\n");
            
            #line 84 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                        }
                        else if (property.PropertyType == typeof(string))
                        {
                            var dataType = property.GetDataType();
                            if (dataType == DataType.Text)
                            {
                        
            
            #line default
            #line hidden
            this.Write("@Html.TextBoxFor(x=>x.");
            
            #line 91 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 91 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(",new{@class=\"form-control col-sm-8\"})");
            
            #line 91 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                            }
                            else if (dataType == DataType.MultilineText)
                            {
                        
            
            #line default
            #line hidden
            this.Write("@Html.TextAreaFor(x=>x.");
            
            #line 95 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 95 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(",new{@class=\"form-control col-sm-8\"})");
            
            #line 95 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                            }
                            else if (dataType == DataType.Password)
                            {
                        
            
            #line default
            #line hidden
            this.Write("@Html.PasswordFor(x=>x.");
            
            #line 99 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 99 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(",new{@class=\"form-control col-sm-8\"})");
            
            #line 99 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                            }
                            else if (dataType == DataType.Custom)
                            {
                        
            
            #line default
            #line hidden
            this.Write("暂不支持自定义数据类型");
            
            #line 103 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                            }
                        }
                        else
                        {
                            
            
            #line default
            #line hidden
            this.Write("                            @Html.TextBoxFor(x=>x.");
            
            #line 109 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 109 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(",new{@class=\"form-control col-sm-8\"})\r\n    ");
            
            #line 110 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                        }
                        
            
            #line default
            #line hidden
            this.Write("@Html.ValidationMessageFor(x=>x.");
            
            #line 112 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 112 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 112 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                    }
                    else if (property.PropertyType.IsEnum)
                    {//枚举

            
            #line default
            #line hidden
            this.Write("                        @Html.EnumDropDownListFor(x=>x.");
            
            #line 117 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 117 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(",new{@class=\"form-control\"})\r\n                        @Html.ValidationMessageFor(" +
                    "x=>x.");
            
            #line 118 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 118 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")\r\n");
            
            #line 119 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                    }
                    else if (property.PropertyType.IsEnumerable())
                    {//数组
                        var elementType = property.PropertyType.IsArray
                                              ? property.PropertyType.GetElementType()
                                              : property.PropertyType.GetGenericArguments().FirstOrDefault();

                        
            
            #line default
            #line hidden
            this.Write("                            <ul class=\"list-group\">\r\n                            " +
                    "    @{\r\n                                    var modelMeta");
            
            #line 130 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 130 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("=ModelMetadata.FromStringExpression(\"");
            
            #line 130 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 130 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\",Html.ViewData);\r\n                                    var dic");
            
            #line 131 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 131 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("=Html.GetUnobtrusiveValidationAttributes(\"");
            
            #line 131 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 131 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\",modelMeta");
            
            #line 131 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 131 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n                                    dic");
            
            #line 132 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 132 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("[\"class\"]=\"form-control\";\r\n                                }\r\n                   " +
                    "             \r\n");
            
            #line 135 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                            if (elementType.IsSimpleType())
                            {//简单数组
                    
            
            #line default
            #line hidden
            this.Write("@foreach(var item in Model.");
            
            #line 138 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 138 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")\r\n                                {\r\n                                    <li cla" +
                    "ss=\"list-group-item\">\r\n                                        <div class=\"input" +
                    "-group\">\r\n");
            
            #line 142 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                                if (elementType == typeof(bool))
                                {//bool数组
                                    
            
            #line default
            #line hidden
            this.Write(" @Html.CheckBox(\"");
            
            #line 145 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 145 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\",item)");
            
            #line 145 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                                }
                                else if (elementType == typeof(string))
                                {//字符 单行，多行，编辑器,密码
                                    var dataType = property.GetDataType();
                                    if (dataType == DataType.Text)
                                    {
                                
            
            #line default
            #line hidden
            this.Write("@Html.TextBox(\"");
            
            #line 152 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 152 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\",item,new{@class=\"form-control\"})");
            
            #line 152 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                                    }
                                    else if (dataType == DataType.MultilineText)
                                    {
                                
            
            #line default
            #line hidden
            this.Write("@Html.TextArea(\"");
            
            #line 156 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 156 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\",item,dic");
            
            #line 156 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 156 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 156 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                                    }
                                    else if (dataType == DataType.Password)
                                    {
                                
            
            #line default
            #line hidden
            this.Write("@Html.Password(\"");
            
            #line 160 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 160 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\",item,dic");
            
            #line 160 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 160 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 160 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                                    }
                                    else if (dataType == DataType.Custom)
                                    {
                                
            
            #line default
            #line hidden
            this.Write("@Html.EditorFor(x=>x.");
            
            #line 164 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 164 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 164 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                                    }
                                }
                                else
                                {
                                    
            
            #line default
            #line hidden
            this.Write("@Html.TextBox(\"");
            
            #line 169 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 169 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\",item,dic");
            
            #line 169 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 169 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 169 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                                }
                    
            
            #line default
            #line hidden
            this.Write("\r\n                                            @Html.ValidationMessage(\"");
            
            #line 173 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 173 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(@""")   
                                            <span class=""input-group-btn"">
                                                <button type=""button"" class=""btn btn-warning"" onclick=""javascript:if($(this).parents('ul').find('li').length<=2){alert('至少1个');return false;}if(confirm('确定删除？')) $(this).parents('li').remove()"">删除</button>
                                            </span>
                                        </div>
                                    </li>
                                    <li class=""list-group-item"">
                                    <button type=""button"" class=""btn btn-primary"" onclick=""javascript:$(this).parent().before($(this).parent().prev().clone(true));$(this).parent().prev().find('input').val('')"">添加</button>
                                </li>
                                }
");
            
            #line 183 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                            }
                            else
                            {//复杂数组
                                
            
            #line default
            #line hidden
            this.Write("@Html.EditorFor(x=>x.");
            
            #line 187 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 187 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 187 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                            }

            
            #line default
            #line hidden
            this.Write("                                \r\n                            </ul>\r\n");
            
            #line 192 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                    }
                    else
                    {//复杂类型
                
            
            #line default
            #line hidden
            this.Write("@Html.EditorFor(x=>x.");
            
            #line 196 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(section.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 196 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 196 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                    }

            
            #line default
            #line hidden
            this.Write("                                           \r\n                    </div>\r\n        " +
                    "        </div>\r\n");
            
            #line 201 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

                
            }

            
            #line default
            #line hidden
            this.Write(@"  
            <div class=""form-actions"" style=""margin-bottom:0; height:70px;""><div class=""col-sm-offset-3 col-sm-9"">
                <button type=""submit"" class=""btn btn-primary""><i class=""icon-ok""></i>确定</button></div>
            </div>
        </form>
</div>
");
            
            #line 210 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

        i++;
    } 

            
            #line default
            #line hidden
            this.Write("</div>\r\n</div>\r\n</div>\r\n</section>");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "E:\project2015\thzsplit\libs\Uninf.Config.PageTemplate\ConfigCshtmlCreator.tt"

private global::System.Type _configTypeField;

/// <summary>
/// Access the configType parameter of the template.
/// </summary>
private global::System.Type configType
{
    get
    {
        return this._configTypeField;
    }
}

private string _postActionField;

/// <summary>
/// Access the postAction parameter of the template.
/// </summary>
private string postAction
{
    get
    {
        return this._postActionField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool configTypeValueAcquired = false;
if (this.Session.ContainsKey("configType"))
{
    this._configTypeField = ((global::System.Type)(this.Session["configType"]));
    configTypeValueAcquired = true;
}
if ((configTypeValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("configType");
    if ((data != null))
    {
        this._configTypeField = ((global::System.Type)(data));
    }
}
bool postActionValueAcquired = false;
if (this.Session.ContainsKey("postAction"))
{
    this._postActionField = ((string)(this.Session["postAction"]));
    postActionValueAcquired = true;
}
if ((postActionValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("postAction");
    if ((data != null))
    {
        this._postActionField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class ConfigCshtmlCreatorBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
